name: Blue Green Image Promotion

on:
  push:
    tags:
      - dev

env:
  ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  PROJECT: farm-operator-screening
  REGION: ca-central-1

jobs:
  setup:
    name: Set Deployment Target
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Extract tag, set deployment target
        run: |
          echo ::set-env name=ENV_SUFFIX::${GITHUB_REF#refs/*/}

      - name: Remove me!
        run: |
          echo $ENV_SUFFIX
          echo ${{ env.ENV_SUFFIX }}

  promote:
    name: Promote Image
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}



      - name: Build Image
        run: make validate-image

      - name: Push Image
        run: make validate-image




      - name: Validate Image
        run: make validate-image

      - name: Source and Target EB Environment Names
        shell: bash
        run: |
          echo $ENV_SUFFIX
          echo "##[set-output name=source;]$(make gh-get-current-aws-env)"
          echo "##[set-output name=destination;]fos-$ENV_SUFFIX$(date '+%Y%m%d%H%M')"
        id: env_names

      - name: Clone EB enviroment
        run: |
          pip install awsebcli
          eb clone ${{ steps.env_names.outputs.env }} --clone_name ${{ env.DEPLOY_ENV }}-${{ steps.env_names.outputs.date }} --exact --verbose

      - name: Creating EB Deployment Artifact
        run: make gh-pipeline-deploy-prep

      - name: Deploying Version to cloned EB environment
        run: make gh-pipeline-deploy-bg-version CLONED_ENV=${{ env.DEPLOY_ENV }}-${{ steps.extract_date.outputs.date }}
